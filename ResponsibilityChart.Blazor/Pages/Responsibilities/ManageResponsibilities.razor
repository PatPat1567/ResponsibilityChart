@page "/ManageResponsibilities" 

<h1>Manage Responsibilities</h1>
<button @onclick="@(() => CreateResponsibility())">
  <span class="oi oi-plus" aria-hidden="true">Add New Responsibility</span>
</button>
<Table TableItem="Responsibility" Items="data" PageSize="10" >
  <Column TableItem="Responsibility" Title="Actions" Field="@(x => x.Id)" Sortable="false" Filterable="false" >
    <Template Context="ResponsibilityContext">
      <button @onclick="@(() => EditResponsibility(ResponsibilityContext.Id))">
        <span class="oi oi-pencil" aria-hidden="true"></span>
      </button>
      <button @onclick="@(() => DeleteResponsibility(ResponsibilityContext.Id))">
        <span class="oi oi-trash" aria-hidden="true"></span>
      </button>
    </Template>
  </Column>
  <Column TableItem="Responsibility" Title="Id" Field="@(x => x.Id)" Sortable="true" Filterable="false" />
  <Pager ShowPageNumber="true" ShowTotalCount="true" ShowPageSizes="true" />
</Table>


@code {
  [CascadingParameter]
  public IModalService Modal { get; set; }

  private IEnumerable<Responsibility> data { get; set;}

  protected override Task OnInitializedAsync()
  {
    data = new List<Responsibility>() {
      new Responsibility() {Id=1}
      };
      return base.OnInitializedAsync();
  }

  private void CreateResponsibility()
  {
    var AddResponsibilityModal = Modal.Show(typeof(AddEditResponsibility), "Add Responsibility");
  }
  private void EditResponsibility(int id)
  {
    var parameters = new ModalParameters();
    parameters.Add("Responsibility", id);
    var EditResponsibilityModal = Modal.Show(typeof(AddEditResponsibility), "Edit Responsibility", parameters);
  }
  private void DeleteResponsibility(int id)
  {
    var parameters = new ModalParameters();
    parameters.Add("Responsibility", id);
    var DeleteResponsibilityModal = Modal.Show(typeof(DeleteResponsibility), "Delete Responsibility", parameters);
  }
}